<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weight Tracker</title>
    <!-- Include Chart.js library -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>

<body>
    <h1>Weight Tracker</h1>

    <form id="weightForm">
        <label for="weight">Enter your weight:</label>
        <input type="number" id="weight" required>
        <label for="date">Enter the date:</label>
        <input type="date" id="date" required>
        <button type="button" onclick="trackWeight()">Track Weight</button>
    </form>

    <h2>Weight History</h2>
    <ul id="weightHistory"></ul>

    <canvas id="weightChart" width="300" height="50"></canvas>

    <script>
        var weightData = [];
        var myChart;

        // Open or create a database named 'WeightDataDB' with version 1
        var request = indexedDB.open('WeightDataDB', 1);
        var db;

        request.onupgradeneeded = function (event) {
            db = event.target.result;
            // Create an object store named 'weightEntries' with auto-increment key
            db.createObjectStore('weightEntries', { autoIncrement: true });
        };

        request.onsuccess = function (event) {
            db = event.target.result;
            // Load data from IndexedDB when the page loads
            loadFromIndexedDB();
        };

        function trackWeight() {
            // Get user input
            var weight = document.getElementById('weight').value;
            var date = document.getElementById('date').value;

            // Validate input
            if (!weight || isNaN(weight)) {
                alert('Please enter a valid weight.');
                return;
            }

            // Add entry to weight data array
            var entry = { date: new Date(date), weight: parseFloat(weight) };
            weightData.push(entry);

            // Create a new list item for the weight history
            var listItem = document.createElement('li');
            listItem.textContent = `Date: ${date}, Weight: ${weight} kg`;

            // Append the new item to the weight history list
            document.getElementById('weightHistory').appendChild(listItem);

            // Update the chart
            updateChart();

            // Store the entry in IndexedDB
            saveToIndexedDB(entry);

            // Clear the form fields
            document.getElementById('weight').value = '';
            document.getElementById('date').value = '';
        }

        function updateChart() {
            var ctx = document.getElementById('weightChart').getContext('2d');

            // Destroy the existing chart to prevent duplication
            if (myChart) {
                myChart.destroy();
            }

            // Create the chart
            myChart = new Chart(ctx, {
                type: 'line',  // Change this to 'line' for a line chart
                data: {
                    labels: weightData.map(entry => entry.date.toLocaleDateString()),
                    datasets: [{
                        label: 'Weight Entries',
                        data: weightData.map(entry => entry.weight),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        fill: false  // Remove this line if you want to fill the area under the line
                    }]
                },
                options: {
                    scales: {
                        x: {
                            type: 'category',
                            offset: true,
                            reverse: true
                        },
                        y: {
                            title: {
                                display: true,
                                text: 'Weight (kg)'
                            },
                            min: 30
                        }
                    }
                }
            });
        }

        function saveToIndexedDB(entry) {
            // Store the entry in the 'weightEntries' object store
            var transaction = db.transaction(['weightEntries'], 'readwrite');
            var objectStore = transaction.objectStore('weightEntries');
            objectStore.add(entry);
        }

        function loadFromIndexedDB() {
            // Retrieve all weight entries from the 'weightEntries' object store
            var transaction = db.transaction(['weightEntries'], 'readonly');
            var objectStore = transaction.objectStore('weightEntries');
            var getRequest = objectStore.openCursor();

            getRequest.onsuccess = function (event) {
                var cursor = event.target.result;
                if (cursor) {
                    // Add each entry to the weight data array
                    weightData.push(cursor.value);

                    // Display the entry on the page
                    var listItem = document.createElement('li');
                    listItem.textContent = `Date: ${cursor.value.date.toLocaleDateString()}, Weight: ${cursor.value.weight} kg`;
                    document.getElementById('weightHistory').appendChild(listItem);

                    cursor.continue();
                }

                // Update the chart after loading all entries
                updateChart();
            };
        }
    </script>

</body>

</html>
